
shekj@LAPTOP-GNU95TN3 MINGW64 ~
$ pwd
/c/Users/shekj

shekj@LAPTOP-GNU95TN3 MINGW64 ~
$ cd ..

shekj@LAPTOP-GNU95TN3 MINGW64 /c/Users
$ cd ..

shekj@LAPTOP-GNU95TN3 MINGW64 /c
$ pwd
/c

shekj@LAPTOP-GNU95TN3 MINGW64 /c
$ cd shekhar

shekj@LAPTOP-GNU95TN3 MINGW64 /c/shekhar (master)
$ cd gittest

shekj@LAPTOP-GNU95TN3 MINGW64 /c/shekhar/gittest (master)
$ pwd
/c/shekhar/gittest

shekj@LAPTOP-GNU95TN3 MINGW64 /c/shekhar/gittest (master)
$ hit init
bash: hit: command not found

shekj@LAPTOP-GNU95TN3 MINGW64 /c/shekhar/gittest (master)
$ git init
Initialized empty Git repository in C:/Shekhar/gittest/.git/

shekj@LAPTOP-GNU95TN3 MINGW64 /c/shekhar/gittest (master)
$ touch gitignore

shekj@LAPTOP-GNU95TN3 MINGW64 /c/shekhar/gittest (master)
$ touch .gitignore

shekj@LAPTOP-GNU95TN3 MINGW64 /c/shekhar/gittest (master)
$ git status
On branch master

No commits yet

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        .gitignore
        Newfolder/
        log.log
        welcome.txt

nothing added to commit but untracked files present (use "git add" to track)

shekj@LAPTOP-GNU95TN3 MINGW64 /c/shekhar/gittest (master)
$ git add .

shekj@LAPTOP-GNU95TN3 MINGW64 /c/shekhar/gittest (master)
$ git commit -m "ignore"
[master (root-commit) 18e5d96] ignore
 4 files changed, 1 insertion(+)
 create mode 100644 .gitignore
 create mode 100644 Newfolder/New Text Document.txt
 create mode 100644 log.log
 create mode 100644 welcome.txt

shekj@LAPTOP-GNU95TN3 MINGW64 /c/shekhar/gittest (master)
$ gitgit
bash: gitgit: command not found

shekj@LAPTOP-GNU95TN3 MINGW64 /c/shekhar/gittest (master)
$ git
usage: git [--version] [--help] [-C <path>] [-c <name>=<value>]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           [--super-prefix=<path>] [--config-env=<name>=<envvar>]
           <command> [<args>]

These are common Git commands used in various situations:

start a working area (see also: git help tutorial)
   clone     Clone a repository into a new directory
   init      Create an empty Git repository or reinitialize an existing one

work on the current change (see also: git help everyday)
   add       Add file contents to the index
   mv        Move or rename a file, a directory, or a symlink
   restore   Restore working tree files
   rm        Remove files from the working tree and from the index

examine the history and state (see also: git help revisions)
   bisect    Use binary search to find the commit that introduced a bug
   diff      Show changes between commits, commit and working tree, etc
   grep      Print lines matching a pattern
   log       Show commit logs
   show      Show various types of objects
   status    Show the working tree status

grow, mark and tweak your common history
   branch    List, create, or delete branches
   commit    Record changes to the repository
   merge     Join two or more development histories together
   rebase    Reapply commits on top of another base tip
   reset     Reset current HEAD to the specified state
   switch    Switch branches
   tag       Create, list, delete or verify a tag object signed with GPG

collaborate (see also: git help workflows)
   fetch     Download objects and refs from another repository
   pull      Fetch from and integrate with another repository or a local branch
   push      Update remote refs along with associated objects

'git help -a' and 'git help -g' list available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.
See 'git help git' for an overview of the system.

shekj@LAPTOP-GNU95TN3 MINGW64 /c/shekhar/gittest (master)
$ git remote add origin https://github.com/shekjasola/april21.git

shekj@LAPTOP-GNU95TN3 MINGW64 /c/shekhar/gittest (master)
$ git push -u origin master
Enumerating objects: 5, done.
Counting objects: 100% (5/5), done.
Delta compression using up to 8 threads
Compressing objects: 100% (2/2), done.
Writing objects: 100% (5/5), 361 bytes | 361.00 KiB/s, done.
Total 5 (delta 0), reused 0 (delta 0), pack-reused 0
To https://github.com/shekjasola/april21.git
 * [new branch]      master -> master
Branch 'master' set up to track remote branch 'master' from 'origin'.

shekj@LAPTOP-GNU95TN3 MINGW64 /c/shekhar/gittest (master)
$ git status
On branch master
Your branch is up to date with 'origin/master'.

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   .gitignore
        modified:   welcome.txt

no changes added to commit (use "git add" and/or "git commit -a")

shekj@LAPTOP-GNU95TN3 MINGW64 /c/shekhar/gittest (master)
$ git add .

shekj@LAPTOP-GNU95TN3 MINGW64 /c/shekhar/gittest (master)
$ git commit -m "ignore2"
[master 087916b] ignore2
 2 files changed, 3 insertions(+), 1 deletion(-)

shekj@LAPTOP-GNU95TN3 MINGW64 /c/shekhar/gittest (master)
$ git push -u origin master
Enumerating objects: 7, done.
Counting objects: 100% (7/7), done.
Delta compression using up to 8 threads
Compressing objects: 100% (2/2), done.
Writing objects: 100% (4/4), 371 bytes | 371.00 KiB/s, done.
Total 4 (delta 0), reused 0 (delta 0), pack-reused 0
To https://github.com/shekjasola/april21.git
   18e5d96..087916b  master -> master
Branch 'master' set up to track remote branch 'master' from 'origin'.

shekj@LAPTOP-GNU95TN3 MINGW64 /c/shekhar/gittest (master)
$ git branch  b1

shekj@LAPTOP-GNU95TN3 MINGW64 /c/shekhar/gittest (master)
$ git checkout b1
Switched to branch 'b1'

shekj@LAPTOP-GNU95TN3 MINGW64 /c/shekhar/gittest (b1)
$ git push -u origin b1
Total 0 (delta 0), reused 0 (delta 0), pack-reused 0
remote:
remote: Create a pull request for 'b1' on GitHub by visiting:
remote:      https://github.com/shekjasola/april21/pull/new/b1
remote:
To https://github.com/shekjasola/april21.git
 * [new branch]      b1 -> b1
Branch 'b1' set up to track remote branch 'b1' from 'origin'.

shekj@LAPTOP-GNU95TN3 MINGW64 /c/shekhar/gittest (b1)
$ git branch
* b1
  master

shekj@LAPTOP-GNU95TN3 MINGW64 /c/shekhar/gittest (b1)
$ git checkout master
Switched to branch 'master'
Your branch is up to date with 'origin/master'.

shekj@LAPTOP-GNU95TN3 MINGW64 /c/shekhar/gittest (master)
$ git branch  -d b1
Deleted branch b1 (was 087916b).

shekj@LAPTOP-GNU95TN3 MINGW64 /c/shekhar/gittest (master)
$ git branch
* master

shekj@LAPTOP-GNU95TN3 MINGW64 /c/shekhar/gittest (master)
$ git push origin  --delete b1
To https://github.com/shekjasola/april21.git
 - [deleted]         b1

shekj@LAPTOP-GNU95TN3 MINGW64 /c/shekhar/gittest (master)
$ git branch b2

shekj@LAPTOP-GNU95TN3 MINGW64 /c/shekhar/gittest (master)
$ git push -u origin b2
Total 0 (delta 0), reused 0 (delta 0), pack-reused 0
remote:
remote: Create a pull request for 'b2' on GitHub by visiting:
remote:      https://github.com/shekjasola/april21/pull/new/b2
remote:
To https://github.com/shekjasola/april21.git
 * [new branch]      b2 -> b2
Branch 'b2' set up to track remote branch 'b2' from 'origin'.

shekj@LAPTOP-GNU95TN3 MINGW64 /c/shekhar/gittest (master)
$ git checkout b2
Switched to branch 'b2'
Your branch is up to date with 'origin/b2'.

shekj@LAPTOP-GNU95TN3 MINGW64 /c/shekhar/gittest (b2)
$ git checkout master
Switched to branch 'master'
Your branch is up to date with 'origin/master'.

shekj@LAPTOP-GNU95TN3 MINGW64 /c/shekhar/gittest (master)
$ git merge b2
Already up to date.

shekj@LAPTOP-GNU95TN3 MINGW64 /c/shekhar/gittest (master)
$
